version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.3.0
  aws-ecr: circleci/aws-ecr@6.12.2
  aws-ecs: circleci/aws-ecs@1.3.0

jobs:
  build_backend:
    working_directory: ~/BackEnd/SEPT.Team.Seven
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout:
          path: ~/BackEnd/SEPT.Team.Seven
      - setup_remote_docker
      - run: mv ./BackEnd/SEPT.Team.Seven ./
      - run:
          name: Setup common environment variables
          command: |
            echo 'export ECR_REPOSITORY_NAME="${AWS_RESOURCE_NAME_PREFIX}"' >> $BASH_ENV
            echo 'export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWSS_DEFAULT_REGION}"' >> $BASH_ENV
      - restore_cache:
          key: circleci-sept-team-seven-{{ checksum "pom.xml" }}
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: circleci-sept-team-seven-{{ checksum "pom.xml" }}
      - run: mvn package
      - store_test_results:
          path: target/surefire-reports
      - store_artifacts:
          path: target/SEPT.Team.Seven-0.0.1-SNAPSHOT.jar
      - run: 
          name: Build docker image
          command: docker build -t $FULL_IMAGE_NAME .
      - run: 
          name: Push Docker image
          command: |
            eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include email)
            docker push $FULL_IMAGE_NAME
  test_backend:
    working_directory: ~/BackEnd/SEPT.Team.Seven
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - checkout:
          path: ~/BackEnd/SEPT.Team.Seven
      - restore_cache:
          key: circleci-sept-team-seven-{{ checksum "pom.xml" }}
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: circleci-sept-team-seven-{{ checksum "pom.xml" }}
      - run: mvn test
  build_frontend:
    working_directory: ~/FrontEnd/appointment-system
    docker:
      - image: circleci/node:10.15.0-jessie
    steps:
      - checkout:
          path: ~/FrontEnd
      - run:
          command: node -e 'const fs = require("fs");fs.readdirSync("./").forEach(file => {console.log(file);});'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm
          command: npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: test
          command: npm run test
      - run:
          name: build
          command: npm run build
      - run:
          name: build
          command: aws s3 rm --recursive s3://sept-team-seven-frontend/
      - run:
          name: test
          command: aws s3 cp --recursive ./build s3://sept-team-seven-frontend/
  test_frontend:
    working_directory: ~/FrontEnd/appointment-system
    docker:
      - image: circleci/node:10.15.0-jessie
    steps:
      - checkout:
          path: ~/FrontEnd/appointment-system
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm
          command: npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: test
          command: npm run test
workflows:
  build:
    jobs:
      - build_backend